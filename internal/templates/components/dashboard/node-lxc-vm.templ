package templates_component_dashboard

import "github.com/Olprog59/dashboard-proxmox/internal/models"
import "fmt"
import "github.com/Olprog59/dashboard-proxmox/internal/commons"
import template_commons "github.com/Olprog59/dashboard-proxmox/internal/templates/commons"

templ DashboardNodes(titre string, list []*models.NodeResource) {
	<div class="mb-6">
		<div class="flex justify-between items-center mb-4">
			<h2 class="text-xl font-bold">{ titre }</h2>
		</div>
		<div id="recent-clusters" class="grid grid-cols-1 xl:grid-cols-2 2xl:grid-cols-3 gap-4">
			for _,v := range list {
				if v != nil {
					@DashboardNode(v)
				}
			}
		</div>
	</div>
}

templ DashboardNode(node *models.NodeResource) {
	{{ cpuValue := *(node.CPU) * 100 }}
	<div
		class={ "p-4 rounded-lg shadow mb-4 transition-all duration-300 hover:shadow-md" , template_commons.GetOnline(*node.Uptime, &cpuValue) }
	>
		<div class="flex items-center space-x-4">
			<!-- Statut avec couleur adaptative -->
			<div class="flex-shrink-0">
				<div
					class={ "h-12" , "w-12" , "flex" , "items-center" , "justify-center" ,
        template_commons.GetOnline(*node.Uptime, nil) }
				>
					if *node.Type == "lxc" {
						<svg width="100%" height="100%" viewBox="0 0 430 430" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" xmlns:serif="http://www.serif.com/" style="fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2;">
							<g transform="matrix(0.1,0,0,-0.1,-297,727)">
								<g transform="matrix(1,0,0,1,2545,-459.864)">
									<path d="M2540,7643C2526,7637 1954,7308 1235,6892C1059,6790 888,6691 855,6672C822,6654 787,6631 776,6622C728,6578 730,6614 730,5575C730,4620 730,4598 750,4560C771,4518 784,4510 1400,4150C1535,4071 1780,3927 1945,3830C2520,3492 2523,3490 2571,3490C2610,3490 2650,3511 2900,3656C3370,3929 4330,4493 4367,4517C4422,4553 4420,4514 4420,5578L4420,6557L4397,6591C4384,6611 4341,6644 4290,6673C4243,6701 4088,6790 3945,6873C3599,7072 3431,7169 3020,7407C2574,7666 2586,7660 2540,7643ZM2623,7392C2646,7376 2771,7303 2900,7228C3029,7153 3345,6970 3602,6821C3860,6672 4074,6550 4080,6550C4098,6550 4090,6535 4062,6519C4047,6510 3916,6434 3770,6350C3624,6266 3368,6118 3200,6020C3032,5923 2822,5802 2734,5751L2572,5659L2508,5698C2432,5745 1873,6068 1400,6340C1216,6445 1064,6533 1062,6535C1058,6539 1208,6628 1790,6963C1881,7015 2094,7139 2265,7239C2435,7338 2576,7420 2578,7420C2580,7420 2600,7407 2623,7392ZM2060,5708L2464,5473L2465,4627C2465,4161 2462,3780 2459,3780C2455,3780 2401,3811 2339,3848C2276,3886 2079,4003 1900,4108C1721,4212 1440,4377 1275,4474C1110,4571 969,4654 963,4658C953,4664 950,4849 950,5485L950,6327C950,6350 1007,6318 2060,5708ZM4200,5508L4200,4665L4007,4553C3787,4425 3448,4226 3012,3968C2845,3870 2703,3787 2696,3784C2687,3781 2683,3786 2685,3802C2686,3815 2688,4196 2689,4650L2690,5475L2803,5541C2864,5577 3034,5676 3180,5760C3486,5936 4035,6255 4130,6311C4166,6333 4196,6350 4198,6350C4199,6350 4200,5971 4200,5508Z" style="fill-rule:nonzero;"></path>
								</g>
								<g transform="matrix(1,0,0,1,2542.32,-459.864)">
									<path d="M2895,6973C2884,6970 2809,6923 2728,6869C2647,6814 2576,6770 2569,6770C2563,6770 2541,6783 2521,6798C2501,6814 2438,6859 2380,6898C2295,6956 2267,6970 2237,6970C2166,6970 2120,6928 2120,6864C2120,6822 2135,6806 2237,6731C2386,6624 2376,6633 2357,6612C2348,6602 2271,6547 2186,6490C2079,6418 2027,6377 2019,6358C2002,6315 2016,6266 2056,6231C2109,6184 2150,6188 2241,6251C2396,6357 2580,6480 2584,6480C2587,6480 2680,6417 2791,6340C2962,6222 3000,6200 3031,6200C3100,6200 3156,6271 3141,6339C3135,6370 3115,6387 2960,6496C2864,6564 2779,6619 2772,6620C2748,6620 2769,6637 2886,6716C2950,6759 3008,6803 3016,6814C3035,6841 3034,6900 3014,6929C3005,6942 2982,6958 2964,6966C2929,6981 2927,6981 2895,6973Z" style="fill-rule:nonzero;"></path>
								</g>
							</g>
						</svg>
					} else {
						<svg width="100%" height="100%" viewBox="0 0 400 400" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" xmlns:serif="http://www.serif.com/" style="fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2;">
							<g transform="matrix(0.1,0,0,-0.1,-312,712)">
								<g transform="matrix(1,0,0,1,-2550,-383.909)">
									<path d="M6073,7330C5976,7310 5886,7240 5837,7146L5805,7085L5805,4655L5833,4599C5864,4536 5935,4464 6001,4428L6045,4405L6649,4402L7252,4399L7246,4352C7242,4326 7224,4220 7206,4115L7174,3925L6971,3922C6788,3920 6765,3918 6740,3900C6682,3858 6673,3752 6724,3701L6750,3675L7648,3672C8141,3671 8556,3672 8568,3675C8581,3678 8603,3693 8616,3707C8636,3728 8640,3743 8640,3792C8640,3847 8637,3855 8606,3886L8572,3920L8173,3920L8166,3963C8163,3986 8147,4084 8130,4180C8114,4276 8100,4365 8100,4377L8100,4399L8693,4402L9285,4405L9341,4433C9410,4466 9473,4532 9508,4608L9535,4665L9535,7075L9509,7130C9470,7212 9419,7265 9342,7302L9275,7335L7695,7336C6826,7337 6096,7334 6073,7330ZM9256,7091C9324,7050 9320,7125 9320,5863C9320,4752 9319,4724 9300,4693C9259,4625 9385,4630 7661,4632L6101,4635L6071,4664C6054,4681 6035,4710 6030,4729C6024,4752 6020,5177 6020,5883C6020,7114 6017,7050 6082,7090C6115,7110 6128,7110 7670,7110C9174,7110 9226,7109 9256,7091Z" style="fill-rule:nonzero;"></path>
								</g>
								<g transform="matrix(1,0,0,1,-2524.26,-377.222)">
									<path d="M7249,6831C7227,6813 7225,6803 7220,6688L7215,6565L7135,6565C7004,6565 6970,6527 6970,6380L6970,6300L6859,6300C6750,6300 6748,6300 6719,6271C6688,6239 6683,6207 6702,6165C6721,6122 6758,6110 6870,6110L6970,6110L6970,5940L6858,5940C6741,5939 6724,5934 6702,5893C6683,5859 6688,5824 6714,5793C6737,5766 6743,5765 6852,5760L6965,5755L6968,5672L6971,5590L6858,5591L6746,5592L6718,5561C6688,5527 6683,5496 6702,5455C6721,5412 6758,5400 6870,5400L6970,5400L6970,5330C6970,5194 7012,5150 7143,5150L7220,5150L7220,5042C7220,4935 7229,4902 7264,4878C7290,4860 7342,4870 7371,4899C7400,4928 7400,4930 7400,5039L7400,5150L7590,5150L7590,5038C7591,4921 7596,4904 7637,4882C7671,4863 7706,4868 7737,4894C7764,4918 7765,4921 7768,5034L7772,5150L7960,5150L7960,5037C7960,4911 7969,4886 8021,4875C8038,4871 8064,4873 8081,4880C8128,4900 8140,4935 8140,5050L8140,5150L8204,5150C8239,5150 8284,5157 8304,5165C8354,5186 8370,5223 8370,5320L8370,5400L8470,5400C8539,5400 8580,5405 8599,5415C8653,5442 8664,5526 8618,5566C8602,5581 8576,5586 8487,5590L8375,5595L8372,5671C8369,5762 8366,5760 8501,5760C8573,5760 8592,5763 8613,5780C8659,5816 8658,5891 8611,5927C8601,5935 8555,5939 8483,5940L8370,5940L8370,6110L8471,6110C8547,6110 8579,6114 8600,6127C8653,6158 8665,6221 8626,6267C8603,6294 8597,6295 8488,6300L8375,6305L8372,6395C8371,6445 8364,6496 8358,6508C8339,6545 8293,6563 8213,6564L8142,6565L8138,6683C8135,6799 8134,6802 8107,6826C8076,6852 8045,6856 8007,6839C7969,6822 7960,6789 7960,6670L7960,6560L7772,6560L7768,6681C7765,6799 7764,6802 7737,6826C7700,6858 7651,6858 7616,6825C7591,6802 7590,6798 7590,6680L7590,6559L7498,6562L7405,6565L7400,6683C7395,6798 7394,6803 7367,6826C7333,6855 7282,6858 7249,6831ZM8178,5857L8180,5350L7678,5352L7175,5355L7175,5855C7175,6130 7176,6358 7178,6363C7180,6367 7405,6369 7678,6368L8175,6365L8178,5857Z" style="fill-rule:nonzero;"></path>
								</g>
								<g transform="matrix(1,0,0,1,-2527.02,-387.786)">
									<path d="M7434,6160C7380,6125 7375,6098 7375,5858C7375,5654 7376,5640 7396,5613C7433,5563 7449,5560 7670,5560C7974,5560 7970,5556 7970,5877C7970,6184 7974,6180 7668,6180C7482,6180 7462,6178 7434,6160Z" style="fill-rule:nonzero;"></path>
								</g>
							</g>
						</svg>
					}
				</div>
			</div>
			<!-- Contenu principal -->
			<div class="flex-1">
				<h2 class="text-lg font-semibold text-blue-700">{ *node.Name }</h2>
				<div class="grid grid-cols-2 gap-2 mt-2 text-sm">
					<div>
						<span class="font-medium text-gray-600">ID:</span>
						<span class="text-gray-800">{ *node.ID }</span>
					</div>
					<div></div>
					<div>
						<span class="font-medium text-gray-600">Nb CPU:</span>
						<span class="text-gray-800">{ fmt.Sprintf("%d",*node.Maxcpu) }</span>
					</div>
					<div>
						<span class="font-medium text-gray-600">CPU:</span>
						<span class="text-gray-800">{ fmt.Sprintf("%.2f%%",*node.CPU * 100) }</span>
					</div>
					<div>
						<span class="font-medium text-gray-600">Max Mem:</span>
						<span class="text-gray-800">{ commons.TransformBytesForHuman(*node.Maxmem,0) }</span>
					</div>
					<div>
						<span class="font-medium text-gray-600">Mem:</span>
						<span class="text-gray-800">{ commons.TransformBytesForHuman(*node.Mem, 2) }</span>
					</div>
					<div>
						<span class="font-medium text-gray-600">Max Disk:</span>
						<span class="text-gray-800">{ commons.TransformBytesForHuman(*node.Maxdisk, 0) }</span>
					</div>
					<div>
						<span class="font-medium text-gray-600">Disk:</span>
						<span class="text-gray-800">{ commons.TransformBytesForHuman(*node.Disk, 2) }</span>
					</div>
				</div>
			</div>
		</div>
	</div>
}
